{"version":3,"sources":["api.js","filters.js","userlist.js","todolist.js","viewUser.js","userTodo.js","viewTodo.js","App.js","serviceWorker.js","index.js"],"names":["BASE_URL","getUsers","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","abrupt","fetch","concat","then","response","json","stop","apply","this","arguments","getUser","_ref2","_callee2","userId","_context2","_x","getTodos","_ref3","_callee3","_context3","getTodo","_ref4","_callee4","todoId","_context4","_x2","getUserTodos","_ref5","_callee5","todos","_context5","sent","console","log","filter","todo","_x3","getFullTodos","_ref6","_callee6","users","_context6","map","username","find","user","id","Filters","_this","props","filters","react_default","createElement","className","type","name","checked","onChange","setFilter","React","Component","UserList","state","newFilter","setState","prevstate","reverse","sort","b","String","list","href","onClick","loadUser","loadUserTodo","TodoList","completed","title","loadTodo","ViewUser","subData","dataList","keys","key","UserTodo","ViewTodo","App","view","userName","setUserId","setUserName","setTodoId","_this2","userlist","todolist","userTodo","viewUser","viewTodo","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.16dfcdc7.chunk.js","sourcesContent":["const BASE_URL = \" https://jsonplaceholder.typicode.com\";\r\n\r\nexport const getUsers = async () => {\r\n  return fetch(`${BASE_URL}/users`).then(response => response.json());\r\n};\r\n\r\nexport const getUser = async userId => {\r\n  return fetch(`${BASE_URL}/users/${userId}`).then(response => response.json());\r\n};\r\n\r\nexport const getTodos = async () => {\r\n  return fetch(`${BASE_URL}/todos`).then(response => response.json());\r\n};\r\n\r\nexport const getTodo = async todoId => {\r\n  return fetch(`${BASE_URL}/todos/${todoId}`).then(response => response.json());\r\n};\r\n\r\nexport const getUserTodos = async userId => {\r\n  const todos = await getTodos();\r\n  console.log(`UserId: ${userId}`);\r\n  return todos.filter(todo => todo.userId === userId);\r\n};\r\n\r\nexport const getFullTodos = async () => {\r\n  const todos = await getTodos();\r\n  const users = await getUsers();\r\n  return todos.map(todo => {\r\n    todo.username = users.find(user => user.id === todo.userId).username;\r\n    return todo;\r\n  });\r\n};\r\n","import React from \"react\";\r\n\r\nclass Filters extends React.Component {\r\n  render() {\r\n    return this.props.filters.map(filter => (\r\n      <li>\r\n        <label className=\"radio\">\r\n          <input\r\n            type=\"radio\"\r\n            name=\"filters\"\r\n            checked={filter === this.props.filter}\r\n            onChange={() => {\r\n              this.props.setFilter(filter);\r\n            }}\r\n          />\r\n          <span className=\"radio-text\">{filter}</span>\r\n        </label>\r\n      </li>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default Filters;\r\n","import React from \"react\";\r\nimport { getUsers } from \"./api.js\";\r\nimport Filters from \"./filters\";\r\n\r\nclass UserList extends React.Component {\r\n  state = {\r\n    users: null,\r\n    filter: \"\",\r\n    filters: [\"id\", \"username\"]\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const users = await getUsers();\r\n\r\n    this.setState({ users: users });\r\n  }\r\n\r\n  setFilter = newFilter => {\r\n    this.state.filter === newFilter\r\n      ? this.setState(prevstate => {\r\n          users: prevstate.users.reverse();\r\n        })\r\n      : this.setState(prevstate => {\r\n          users: prevstate.users.sort((a, b) => {\r\n            a = String(a[newFilter]);\r\n            b = String(b[newFilter]);\r\n            if (a < b) {\r\n              return -1;\r\n            }\r\n            if (a > b) {\r\n              return 1;\r\n            }\r\n          });\r\n        });\r\n    this.setState({ filter: newFilter });\r\n  };\r\n\r\n  list = users =>\r\n    users.map(user => (\r\n      <li className=\"\" id={user.id}>\r\n        <a\r\n          href=\"#\"\r\n          onClick={() => {\r\n            this.props.loadUser(user.id);\r\n          }}\r\n          className=\"user\"\r\n        >\r\n          {user.username}\r\n        </a>\r\n        <div>\r\n          <button\r\n            className=\"loadTodo\"\r\n            onClick={() => {\r\n              this.props.loadUserTodo(user.id);\r\n            }}\r\n          >\r\n            Load User Todo\r\n          </button>\r\n        </div>\r\n      </li>\r\n    ));\r\n\r\n  render() {\r\n    const users = this.state.users;\r\n    return (\r\n      <div>\r\n        <ul className=\"filters\">\r\n          <Filters\r\n            setFilter={this.setFilter}\r\n            filters={this.state.filters}\r\n            filter={this.state.filter}\r\n          />\r\n        </ul>\r\n        <ul className=\"todo-list\">\r\n          {users ? this.list(users) : <h2> Loading... </h2>}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserList;\r\n","import React from \"react\";\r\nimport { getFullTodos } from \"./api.js\";\r\nimport Filters from \"./filters\";\r\n\r\nclass TodoList extends React.Component {\r\n  state = {\r\n    todos: null,\r\n    filter: \"\",\r\n    filters: [\"completed\", \"username\", \"title\"]\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const todos = await getFullTodos();\r\n    this.setState({\r\n      todos: todos\r\n    });\r\n  }\r\n\r\n  setFilter = newFilter => {\r\n    this.state.filter === newFilter\r\n      ? this.setState(prevstate => {\r\n          todos: prevstate.todos.reverse();\r\n        })\r\n      : this.setState(prevstate => {\r\n          todos: prevstate.todos.sort((a, b) => {\r\n            a = String(a[newFilter]);\r\n            b = String(b[newFilter]);\r\n            if (a < b) {\r\n              return -1;\r\n            }\r\n            if (a > b) {\r\n              return 1;\r\n            }\r\n          });\r\n        });\r\n    this.setState({ filter: newFilter });\r\n  };\r\n\r\n  list = todos =>\r\n    todos.map(todo => (\r\n      <li>\r\n        <input type=\"checkbox\" checked={todo.completed} className=\"toggle\" />\r\n        <label>\r\n          <a\r\n            href=\"#\"\r\n            onClick={() => {\r\n              this.props.loadUser(todo.userId);\r\n            }}\r\n          >\r\n            {todo.username}\r\n          </a>\r\n          {todo.title}\r\n        </label>\r\n        <div className=\"but\">\r\n          <button\r\n            className=\"loadTodo\"\r\n            onClick={() => {\r\n              this.props.loadTodo(todo.id);\r\n            }}\r\n          >\r\n            Load Todo\r\n          </button>\r\n        </div>\r\n      </li>\r\n    ));\r\n\r\n  render() {\r\n    const todos = this.state.todos;\r\n    return (\r\n      <div>\r\n        <ul className=\"filters\">\r\n          <Filters\r\n            setFilter={this.setFilter}\r\n            filters={this.state.filters}\r\n            filter={this.state.filter}\r\n          />\r\n        </ul>\r\n        <ul className=\"todo-list\">\r\n          {todos ? this.list(todos) : <h2> Loading... </h2>}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport { getUser } from \"./api.js\";\r\n\r\nclass ViewUser extends React.Component {\r\n  state = {\r\n    user: null\r\n  };\r\n\r\n  subData = dataList => {\r\n    return Object.keys(dataList).map(key => (\r\n      <li>\r\n        <div>{key}:</div>\r\n        {typeof dataList[key] === \"object\" ? (\r\n          <ul>{this.subData(dataList[key])}</ul>\r\n        ) : (\r\n          <div>{dataList[key]}</div>\r\n        )}\r\n      </li>\r\n    ));\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const user = await getUser(this.props.userId);\r\n\r\n    this.setState({ user: user });\r\n  }\r\n\r\n  render() {\r\n    {\r\n      console.log(`view User: ${this.props.userId}`);\r\n    }\r\n    const user = this.state.user;\r\n    return (\r\n      <ul className=\"todo-list\">\r\n        {user ? this.subData(user) : <h2> Loading... </h2>}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewUser;\r\n","import React from \"react\";\r\nimport { getUserTodos } from \"./api.js\";\r\nimport Filters from \"./filters\";\r\n\r\nclass UserTodo extends React.Component {\r\n  state = {\r\n    todos: null,\r\n    filter: \"\",\r\n    filters: [\"completed\", \"title\"]\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const todos = await getUserTodos(this.props.userId);\r\n\r\n    this.setState({ todos: todos });\r\n  }\r\n\r\n  setFilter = newFilter => {\r\n    this.state.filter === newFilter\r\n      ? this.setState(prevstate => {\r\n          todos: prevstate.todos.reverse();\r\n        })\r\n      : this.setState(prevstate => {\r\n          todos: prevstate.todos.sort((a, b) => {\r\n            a = String(a[newFilter]);\r\n            b = String(b[newFilter]);\r\n            if (a < b) {\r\n              return -1;\r\n            }\r\n            if (a > b) {\r\n              return 1;\r\n            }\r\n          });\r\n        });\r\n    this.setState({ filter: newFilter });\r\n  };\r\n\r\n  list = () =>\r\n    this.state.todos.map(todo => (\r\n      <li>\r\n        <input type=\"checkbox\" checked={todo.completed} className=\"toggle\" />\r\n        <label>{todo.title}</label>\r\n        <div>\r\n          <button\r\n            className=\"loadTodo\"\r\n            onClick={() => {\r\n              this.props.loadTodo(todo.id);\r\n            }}\r\n          >\r\n            Load Todo\r\n          </button>\r\n        </div>\r\n      </li>\r\n    ));\r\n\r\n  render() {\r\n    const todos = this.state.todos;\r\n    return (\r\n      <div>\r\n        <ul className=\"filters\">\r\n          <Filters\r\n            setFilter={this.setFilter}\r\n            filters={this.state.filters}\r\n            filter={this.state.filter}\r\n          />\r\n        </ul>\r\n        <ul className=\"todo-list\">\r\n          {todos ? this.list(todos) : <h2> Loading... </h2>}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserTodo;\r\n","import React from \"react\";\r\nimport { getTodo } from \"./api.js\";\r\n\r\nclass ViewTodo extends React.Component {\r\n  state = {\r\n    todo: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const todo = await getTodo(this.props.todoId);\r\n\r\n    this.setState({ todo: todo });\r\n  }\r\n\r\n  list = todo =>\r\n    Object.keys(todo).map(key => (\r\n      <li>\r\n        <div>{key}:</div>\r\n        <div>{todo[key]}</div>\r\n      </li>\r\n    ));\r\n\r\n  render() {\r\n    const todo = this.state.todo;\r\n    return <div>{todo ? this.list(todo) : <h2> Loading... </h2>}</div>;\r\n  }\r\n}\r\n\r\nexport default ViewTodo;\r\n","import React from \"react\";\n//import logo from './logo.svg';\nimport \"./App.css\";\n//import {getUsers, getUser, getTodos, getTodo, getUserTodos } from './api.js';\nimport UserList from \"./userlist\";\nimport TodoList from \"./todolist\";\nimport ViewUser from \"./viewUser\";\nimport UserTodo from \"./userTodo\";\nimport ViewTodo from \"./viewTodo\";\n\nclass App extends React.Component {\n  state = {\n    view: null,\n    userId: 0,\n    userName: \"\",\n    todoId: 0\n  };\n\n  setUserId = id => this.setState({ userId: id });\n  setUserName = name => this.setState({ userName: name });\n  setTodoId = id => this.setState({ todoId: id });\n\n  loadUser = id => {\n    this.setUserId(id);\n    this.setState({ view: \"User\" });\n  };\n\n  loadTodo = id => {\n    this.setTodoId(id);\n    this.setState({ view: \"Todo\" });\n  };\n\n  loadUserTodo = id => {\n    this.setUserId(id);\n    this.setState({ view: \"UserTodo\" });\n  };\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos App</h1>\n\n          <button\n            onClick={() => {\n              this.setState({ view: \"UserList\" });\n            }}\n          >\n            List Users\n          </button>\n          <button\n            onClick={() => {\n              this.setState({ view: \"TodoList\" });\n            }}\n          >\n            List Todos\n          </button>\n        </header>\n        <section className=\"main\">\n          {this.state.view === \"UserList\" ? (\n            <UserList\n              loadUser={this.loadUser}\n              loadUserTodo={this.loadUserTodo}\n            />\n          ) : this.state.view === \"TodoList\" ? (\n            <TodoList\n              loadTodo={this.loadTodo}\n              loadUser={this.loadUser}\n              loadUserTodo={this.loadUserTodo}\n            />\n          ) : this.state.view === \"UserTodo\" ? (\n            <UserTodo userId={this.state.userId} loadTodo={this.loadTodo} />\n          ) : this.state.view === \"User\" ? (\n            <ul className=\"todo-list\">\n              <ViewUser\n                setFilter={this.setFilter}\n                filter={this.state.filter}\n                userId={this.state.userId}\n                loadUserTodo={this.loadUserTodo}\n              />\n            </ul>\n          ) : this.state.view === \"Todo\" ? (\n            <ul className=\"todo-list\">\n              <ViewTodo loadUser={this.loadUser} todoId={this.state.todoId} />\n            </ul>\n          ) : (\n            <div />\n          )}\n        </section>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}