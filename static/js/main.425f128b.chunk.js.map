{"version":3,"sources":["api.js","Filters.js","UserList.js","TodoList.js","ViewUser.js","ViewTodo.js","App.js","serviceWorker.js","index.js"],"names":["BASE_URL","getUsers","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","abrupt","fetch","concat","then","response","json","stop","apply","this","arguments","getUser","_ref2","_callee2","userId","_context2","_x","getTodos","_ref3","_callee3","_context3","getTodo","_ref4","_callee4","todoId","_context4","_x2","getUserTodos","_ref5","_callee5","todos","_context5","sent","filter","todo","_x3","getFullTodos","_ref6","_callee6","users","_context6","map","username","find","user","id","Filters","list","_this","props","filters","react_default","createElement","key","onClick","setFilter","className","React","Component","UserList","state","reversed","newFilter","setState","prevstate","reverse","sort","b","String","setUserViewer","_this$state","src_Filters","TodoList","type","defaultChecked","completed","title","setTodoViewer","ViewUser","subData","dataList","keys","ViewTodo","App","view","userName","_this2","App_Viewer","Viewer","_React$createElement","src_UserList","src_TodoList","defineProperty","src_ViewUser","src_ViewTodo","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.425f128b.chunk.js","sourcesContent":["const BASE_URL = \" https://jsonplaceholder.typicode.com\";\r\n\r\nexport const getUsers = async () => {\r\n  return fetch(`${BASE_URL}/users`).then(response => response.json());\r\n};\r\n\r\nexport const getUser = async userId => {\r\n  return fetch(`${BASE_URL}/users/${userId}`).then(response => response.json());\r\n};\r\n\r\nexport const getTodos = async () => {\r\n  return fetch(`${BASE_URL}/todos`).then(response => response.json());\r\n};\r\n\r\nexport const getTodo = async todoId => {\r\n  return fetch(`${BASE_URL}/todos/${todoId}`).then(response => response.json());\r\n};\r\n\r\nexport const getUserTodos = async userId => {\r\n  const todos = await getTodos();\r\n  return todos.filter(todo => todo.userId === userId);\r\n};\r\n\r\nexport const getFullTodos = async () => {\r\n  const todos = await getTodos();\r\n  const users = await getUsers();\r\n  return todos.map(todo => {\r\n    todo.username = users.find(user => user.id === todo.userId).username;\r\n    return todo;\r\n  });\r\n};\r\n","import React from \"react\";\r\n\r\nclass Filters extends React.Component {\r\n\r\n  list = () => {return this.props.filters.map(filter => (\r\n      <li key={filter}>\r\n        <div onClick={() => {\r\n              this.props.setFilter(filter);\r\n            }}>\r\n          <span className=\"radio-text\">{filter}</span>\r\n        </div>\r\n      </li>\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ul className=\"filters\">\r\n      {this.list()}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Filters;\r\n","import React from \"react\";\r\nimport { getUsers } from \"./api.js\";\r\nimport Filters from \"./Filters\";\r\n\r\nclass UserList extends React.Component {\r\n  state = {\r\n    users: null,\r\n    filter: \"\",\r\n    reversed: false,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const users = await getUsers();\r\n\r\n    this.setState({ users: users });\r\n  }\r\n\r\n  setFilter = newFilter => {\r\n    this.state.filter === newFilter\r\n      ? this.setState(prevstate => {\r\n          return {users: prevstate.users.reverse(),\r\n                  reversed: !prevstate.reversed\r\n                }})\r\n      : this.setState(prevstate => {\r\n          return {filter: newFilter,\r\n                    users: prevstate.users.sort((a, b) => {\r\n                      a = String(a[newFilter]);\r\n                      b = String(b[newFilter]);\r\n                      if (a < b) {\r\n                        return -1;\r\n                      }\r\n                      if (a > b) {\r\n                        return 1;\r\n                      }\r\n                    })}\r\n        });\r\n  };\r\n\r\n  list = users =>\r\n    users.map(user => (\r\n      <li className=\"\" key={user.id}>\r\n        <div className=\"link\"\r\n          onClick={() => {\r\n            this.props.setUserViewer(user.id, \"User\");\r\n          }}\r\n        >\r\n          {user.username}\r\n        </div>\r\n        <div>\r\n          <button\r\n            className=\"loadTodo\"\r\n            onClick={() => {\r\n              this.props.setUserViewer(user.id, \"UserTodo\");\r\n            }}\r\n          >\r\n            Load User Todo\r\n          </button>\r\n        </div>\r\n      </li>\r\n    ));\r\n\r\n  render() {\r\n    const {users, reversed} = this.state;\r\n    return (\r\n      <div>\r\n          <Filters\r\n            setFilter={this.setFilter}\r\n            filters={this.props.filters}\r\n            filter={this.state.filter}\r\n          />\r\n        <ul className=\"todo-list\" key={reversed}>\r\n          {users ? this.list(users) : <h2> Loading... </h2>}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserList;\r\n","import React from \"react\";\r\nimport { getFullTodos, getUserTodos } from \"./api.js\";\r\nimport Filters from \"./Filters\";\r\n\r\nclass TodoList extends React.Component {\r\n  state = {\r\n    todos: null,\r\n    filter: \"\",\r\n    reversed: false,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const todos = (this.props.userId === \"\") ? await getFullTodos() : await getUserTodos(this.props.userId);\r\n    this.setState({todos});\r\n  }\r\n\r\n  setFilter = newFilter => {\r\n    this.state.filter === newFilter\r\n      ? this.setState(prevstate => {\r\n        return {todos: prevstate.todos.reverse(),\r\n                reverse: !prevstate.reverse\r\n              }})\r\n      : this.setState(prevstate => {\r\n          return {filter: newFilter,\r\n                    todos: prevstate.todos.sort((a, b) => {\r\n                      a = String(a[newFilter]);\r\n                      b = String(b[newFilter]);\r\n                      if (a < b) {\r\n                        return -1;\r\n                      }\r\n                      if (a > b) {\r\n                        return 1;\r\n                      }\r\n                    })}\r\n        });\r\n  };\r\n\r\n  list = todos =>\r\n    todos.map(todo => (\r\n      <li key={todo.id}>\r\n        <input type=\"checkbox\" defaultChecked={todo.completed} className=\"toggle\" />\r\n        <label>\r\n          <div className=\"link\"\r\n            onClick={() => {\r\n              this.props.setUserViewer(todo.userId, \"User\");\r\n            }}\r\n          >\r\n            {todo.username}\r\n          </div>\r\n          {todo.title}\r\n        </label>\r\n        <div className=\"but\">\r\n          <button\r\n            className=\"loadTodo\"\r\n            onClick={() => {\r\n              this.props.setTodoViewer(todo.id, \"Todo\");\r\n            }}\r\n          >\r\n            Load Todo\r\n          </button>\r\n        </div>\r\n      </li>\r\n    ));\r\n\r\n  render() {\r\n    const todos = this.state.todos;\r\n    return (\r\n      <div>\r\n          <Filters\r\n            setFilter={this.setFilter}\r\n            filters={this.props.filters}\r\n            filter={this.state.filter}\r\n          />\r\n        <ul className=\"todo-list\">\r\n          {todos ? this.list(todos) : <h2> Loading... </h2>}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport { getUser } from \"./api.js\";\r\n\r\nclass ViewUser extends React.Component {\r\n  state = {\r\n    user: null\r\n  };\r\n\r\n  subData = dataList => {\r\n    return Object.keys(dataList).map(key => (\r\n      <li key={key}>\r\n        <div>{key}:</div>\r\n        {typeof dataList[key] === \"object\" ? (\r\n          <ul>{this.subData(dataList[key])}</ul>\r\n        ) : (\r\n          <div>{dataList[key]}</div>\r\n        )}\r\n      </li>\r\n    ));\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const user = await getUser(this.props.userId);\r\n\r\n    this.setState({ user: user });\r\n  }\r\n\r\n  render() {\r\n     const {user} = this.state;\r\n    return (\r\n      <ul className=\"todo-list\">\r\n        {user ? this.subData(user) : <h2> Loading... </h2>}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewUser;\r\n","import React from \"react\";\r\nimport { getTodo } from \"./api.js\";\r\n\r\nclass ViewTodo extends React.Component {\r\n  state = {\r\n    todo: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const todo = await getTodo(this.props.todoId);\r\n\r\n    this.setState({ todo: todo });\r\n  }\r\n\r\n  list = todo =>\r\n    Object.keys(todo).map(key => (\r\n      <li key={key}>\r\n        <div>{key}:</div>\r\n        <div>{todo[key]}</div>\r\n      </li>\r\n    ));\r\n\r\n  render() {\r\n    const todo = this.state.todo;\r\n    return <div>{todo ? this.list(todo) : <h2> Loading... </h2>}</div>;\r\n  }\r\n}\r\n\r\nexport default ViewTodo;\r\n","import React from \"react\";\n//import logo from './logo.svg';\nimport \"./App.css\";\n//import {getUsers, getUser, getTodos, getTodo, getUserTodos } from './api.js';\nimport UserList from \"./UserList\";\nimport TodoList from \"./TodoList\";\nimport ViewUser from \"./ViewUser\";\nimport ViewTodo from \"./ViewTodo\";\n\nclass App extends React.Component {\n  state = {\n    view: null,\n    userId: 0,\n    userName: \"\",\n    todoId: 0\n  };\n\n  setUserViewer = (userId, view) => this.setState({userId, view});\n\n  setTodoViewer=  (todoId, view) => this.setState({todoId, view});\n\n   render() {\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos App</h1>\n\n          <button\n            onClick={() => {\n              this.setState({ view: \"UserList\" });\n            }}\n          >\n            List Users\n          </button>\n          <button\n            onClick={() => {\n              this.setState({ view: \"TodoList\" });\n            }}\n          >\n            List Todos\n          </button>\n        </header>\n        <section className=\"main\">\n\n          <Viewer \n          key={this.state.view}\n          view={this.state.view}\n          setUserViewer={this.setUserViewer}\n          setTodoViewer={this.setTodoViewer}\n          userId={this.state.userId}\n          todoId={this.state.todoId}\n          />\n  \n        </section>\n      </section>\n    );\n  }\n}\n\n const Viewer = (props) => {\n         switch(props.view){\n          case \"UserList\": return (<UserList\n              setUserViewer={props.setUserViewer}\n              filters = {[\"id\", \"username\"]}\n            />)\n          case \"TodoList\": return (<TodoList\n              setTodoViewer={props.setTodoViewer}\n              setUserViewer={props.setUserViewer}\n              userId={\"\"}\n              filters={[\"completed\", \"username\", \"title\"]}\n            />)\n          case \"UserTodo\": return  (\n            <TodoList \n              userId={props.userId} \n              setTodoViewer={props.setTodoViewer}\n              setTodoViewer={props.setTodoViewer} \n              filters={[\"completed\", \"title\"]}\n            />)\n          case \"User\": return (<ul className=\"todo-list\">\n              <ViewUser\n                userId={props.userId}\n              />\n            </ul>)\n          case \"Todo\": return (<ul className=\"todo-list\">\n              <ViewTodo \n              todoId={props.todoId} />\n            </ul>)\n          default: return (<div />)\n        }\n      }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}